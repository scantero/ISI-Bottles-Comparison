1. ¿Cómo de difícil crees que fue escribir este código?
- Es muy lioso, fragmenta demasiado la solución, lo cual lo hace difícil de seguir y complica la solución. Por una parte, la clase Bottles es sencilla
de entender, pero lo complica todo en la función 'verse()', que utiliza la clase Round para configurar los versos por la gran fragmentación.
El flujo es muy complicado, porque cada llamada requiere muchos pasos pequeños.
- De escribir, fácil, porque los métodos son sencillos y rápidos.
- Es muy difícil. Está todo muy separado y es muy difícil de seguir el flujo.
- Es bastante más complicado que el anterior porque aunque tiene en cuenta los casos por separado, el fujo del código  es difícil de seguir.
- Creo que fue un poco complicado, puesto que hay demasiadas funciones y llamadas internas que enrevesan la lógica del código.

2. ¿Es difícil entender lo que hace? Leyendo al código trata de encontrar respuesta a estas preguntas:
a) ¿Cuántas variantes de verso hay? Explícalo en función del código de cada versión. Detalla la explicación.
- Es bastante dificil de seguir, tienes que leerlo muchas veces, y subir y bajar muchas veces en el código para
  ver las cosas.
- Es muy difícil de diferenciarlas porque hay muchos métodos que influyen en él.
- Es difícil saberlo, ya que al estar divididdo tanto el código en métodos, no se puede saber con tanta claridad como en la versión B.
- Creo que es bastante complicado saberlo con este código porque no está escrito en el "orden lógico" de los versos, y no se aprecia fácilmente qué es lo que hace.

b) ¿Qué versos son los más frecuentes? ¿Cuánto de frecuentes? Explícalo en función del código de cada versión. Detalla la explicación.
-Es muy difícil saberlo porque es difícil hasta saber cuál es el verso.
- Tampoco se puede saber debido a la fragmentación del código.

c) ¿Qué versos son los más diferentes? ¿En qué modo son diferentes? Explícalo en función del código de cada versión. Detalla la explicación.
- Es muy difícil, es difícil saber hasta que versos hay
- No se puede saber con claridad ya que cada método se corresponde con un fragmento de la cadena.
- No sabría responder a esta pregunta sólo con este código.

d) ¿Qué regla determina el verso que viene a continuación? Explícalo en función del código de cada versión. Detalla la explicación.
- Es muy difícil saberlo por las mismas razones.
- Tampoco podemos saberlo porque el flujo del código es bastante enrevesado.
- Creo que la frase justo anterior determina la siguiente parte del verso en la función "def go_to_the_store_or_take_one_down(self):", pero en el resto me resulta imposible sacar una regla.

3. ¿Qué coste crees que tendría cambiar cada versión para aceptar un nuevo requisito?
- Es un coste muy alto, porque hay que cambiar hasta el nombre de los métodos.
- El coste para un cambio pequeño, por ejemplo modificar 'beer' por 'milk', sería muy bajo, tan sólo habría que modificar un método.
La pega es que los nombres utilizados para los métodos no son nada generalizados, por lo que los cambios como el anterior estropearian la lectura
del código al no ser nombres bien elegidos, significativos pero no particularizados.
El coste por otra parte sería muy alto en otros casos, porque en el ejemplo de hacer cambios significativos en los versos habría que modificar
hasta 7 métodos diferentes.
- Tendrá un alto coste ya que los métodos tienen un nombre muy específico, y además al haber tantos métodos habría que modificar bastantes cosas.
- Puesto que hay muchas funciones relacionadas unas con otras, habría que modificar gran parte del código. Además, muy posiblemente hubiera que cambiar también los nombre de los métodos, ya que son muy explícitos y nada genéricos.
